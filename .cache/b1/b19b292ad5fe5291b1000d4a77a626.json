{"id":"updateSettings.mjs","dependencies":[{"name":"C:\\WebApps\\natours\\package.json","includedInParent":true,"mtime":1651830721831},{"name":"axios","loc":{"line":2,"column":18,"index":39},"parent":"C:\\WebApps\\natours\\public\\js\\updateSettings.mjs","resolved":"C:\\WebApps\\natours\\node_modules\\axios\\index.js"},{"name":"./alerts.mjs","loc":{"line":3,"column":26,"index":75},"parent":"C:\\WebApps\\natours\\public\\js\\updateSettings.mjs","resolved":"C:\\WebApps\\natours\\public\\js\\alerts.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateSettings = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _alerts = require(\"./alerts.mjs\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar updateSettings =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(data, type) {\n    var endpoint, res;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            endpoint = type === 'password' ? 'updatePassword' : 'updateMyDetails';\n            _context.next = 4;\n            return (0, _axios.default)({\n              method: 'PATCH',\n              url: \"http://localhost:8000/api/v1/users/\".concat(endpoint),\n              data: data\n            });\n\n          case 4:\n            res = _context.sent;\n            console.log(res, 'res', name);\n\n            if (res.data.status === 'success') {\n              (0, _alerts.showAlert)('success', \"\".concat(type.toUpperCase(), \" updated successfully\"));\n            }\n\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            (0, _alerts.showAlert)('error', _context.t0.response.data.message);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n\n  return function updateSettings(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.updateSettings = updateSettings;"},"sourceMaps":null,"error":null,"hash":"b410917a4c0f0ebcb600e34c3968b90a","cacheData":{"env":{}}}