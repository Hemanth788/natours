{"id":"../../node_modules/axios/lib/core/settle.js","dependencies":[{"name":"C:\\WebApps\\natours\\package.json","includedInParent":true,"mtime":1651830721831},{"name":"C:\\WebApps\\natours\\node_modules\\axios\\package.json","includedInParent":true,"mtime":1651827082565},{"name":"./AxiosError","loc":{"line":3,"column":25},"parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\core\\settle.js","resolved":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\core\\AxiosError.js"}],"generated":{"js":"'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n"},"sourceMaps":null,"error":null,"hash":"6efede549ac77a776a5699d0bdb5870a","cacheData":{"env":{}}}