{"id":"../../node_modules/axios/lib/helpers/toFormData.js","dependencies":[{"name":"C:\\WebApps\\natours\\package.json","includedInParent":true,"mtime":1651830721831},{"name":"C:\\WebApps\\natours\\node_modules\\axios\\package.json","includedInParent":true,"mtime":1651827082565},{"name":"../utils","loc":{"line":3,"column":20},"parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\helpers\\toFormData.js","resolved":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\utils.js"},{"name":"buffer","parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\helpers\\toFormData.js","resolved":"C:\\WebApps\\natours\\node_modules\\node-libs-browser\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n"},"sourceMaps":null,"error":null,"hash":"ffd2ecd7b598a57907ef9d5630a15cd7","cacheData":{"env":{}}}