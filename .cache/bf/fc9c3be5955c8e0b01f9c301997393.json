{"id":"../../node_modules/axios/lib/cancel/CanceledError.js","dependencies":[{"name":"C:\\WebApps\\natours\\package.json","includedInParent":true,"mtime":1651830721831},{"name":"C:\\WebApps\\natours\\node_modules\\axios\\package.json","includedInParent":true,"mtime":1651827082565},{"name":"../core/AxiosError","loc":{"line":3,"column":25},"parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\cancel\\CanceledError.js","resolved":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\core\\AxiosError.js"},{"name":"../utils","loc":{"line":4,"column":20},"parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\cancel\\CanceledError.js","resolved":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\utils.js"}],"generated":{"js":"'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n"},"sourceMaps":null,"error":null,"hash":"4ba63454b819972768152ae22fd80dd4","cacheData":{"env":{}}}