{"id":"../../node_modules/axios/lib/defaults/index.js","dependencies":[{"name":"C:\\WebApps\\natours\\package.json","includedInParent":true,"mtime":1651830721831},{"name":"C:\\WebApps\\natours\\node_modules\\axios\\package.json","includedInParent":true,"mtime":1651827082565},{"name":"../utils","loc":{"line":3,"column":20},"parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\utils.js"},{"name":"../helpers/normalizeHeaderName","loc":{"line":4,"column":34},"parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\helpers\\normalizeHeaderName.js"},{"name":"../core/AxiosError","loc":{"line":5,"column":25},"parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\core\\AxiosError.js"},{"name":"./transitional","loc":{"line":6,"column":35},"parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\defaults\\transitional.js"},{"name":"../helpers/toFormData","loc":{"line":7,"column":25},"parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\helpers\\toFormData.js"},{"name":"../adapters/xhr","loc":{"line":23,"column":22},"parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\adapters\\xhr.js"},{"name":"../adapters/http","loc":{"line":26,"column":22},"parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\adapters\\xhr.js"},{"name":"./env/FormData","loc":{"line":124,"column":22},"parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\helpers\\null.js"},{"name":"process","parent":"C:\\WebApps\\natours\\node_modules\\axios\\lib\\defaults\\index.js","resolved":"C:\\WebApps\\natours\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n"},"sourceMaps":null,"error":null,"hash":"2d07d6152d43eec12d09b622c068a6ee","cacheData":{"env":{}}}